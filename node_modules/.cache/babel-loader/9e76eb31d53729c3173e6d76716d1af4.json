{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n_c3 = CsvBox;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n_c4 = CustomerAddButtons;\n\nfunction CustomerAddPage() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CUSTOMERS);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [addCustomer, {\n    loading: mutationLoading,\n    error: mutationError,\n    data: customerdata\n  }] = useMutation(ADD_CUSTOMER);\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.replace(/\\W/g, \"_\")\n  };\n\n  const handleCSV = (data, fileInfo) => {\n    addCustomer({\n      variables: {\n        newcustomers: data\n      }\n    });\n  };\n\n  const handleCustomer = () => {};\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!addmultiple && !addone && /*#__PURE__*/_jsxDEV(CustomerAddButtons, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddone(true),\n        children: \"Add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddmultiple(true),\n        children: \"Add multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), addmultiple && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CsvBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload .CSV file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          cssClass: \"csv-reader-input\",\n          onFileLoaded: handleCSV,\n          parserOptions: parseOptions,\n          inputId: \"csvId\",\n          inputStyle: {\n            color: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing and uploading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 31\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error, Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }, this), customerdata && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customers succesfully added \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true), addone && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n      children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: \"ID\",\n        firstName: \"firstName\",\n        lastName: \"lastName\",\n        email: \"email\",\n        customerSince: \"customerSince\"\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n      children: data.customers.map(({\n        id,\n        firstName,\n        lastName,\n        email,\n        customerSince\n      }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        customerSince: customerSince\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerAddPage, \"3XtwWUqwUBvneEd5RRS5A+v3qVo=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c5 = CustomerAddPage;\nexport default CustomerAddPage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CsvBox\");\n$RefreshReg$(_c4, \"CustomerAddButtons\");\n$RefreshReg$(_c5, \"CustomerAddPage\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js"],"names":["useQuery","useMutation","GET_CUSTOMERS","ADD_CUSTOMER","CustomerItem","styled","React","useEffect","useState","CSVReader","CustomerTable","div","CustomerHeader","CsvBox","CustomerAddButtons","CustomerAddPage","loading","error","data","addone","setaddone","addmultiple","setaddmultiple","addCustomer","mutationLoading","mutationError","customerdata","parseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","handleCSV","fileInfo","variables","newcustomers","handleCustomer","color","customers","map","id","firstName","lastName","email","customerSince"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\nfunction CustomerAddPage() {\n  const { loading, error, data } = useQuery(GET_CUSTOMERS);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [\n    addCustomer,\n    { loading: mutationLoading, error: mutationError, data: customerdata },\n  ] = useMutation(ADD_CUSTOMER);\n\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.replace(/\\W/g, \"_\"),\n  };\n\n  const handleCSV = (data, fileInfo) => {\n    addCustomer({ variables: { newcustomers: data } });\n  };\n\n  const handleCustomer = () => {};\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      {!addmultiple && !addone && (\n        <CustomerAddButtons>\n          <button onClick={() => setaddone(true)}>Add one</button>\n          <button onClick={() => setaddmultiple(true)}>Add multiple</button>\n        </CustomerAddButtons>\n      )}\n\n      {addmultiple && (\n        <>\n          <CsvBox>\n            <p>Upload .CSV file:</p>\n            <CSVReader\n              cssClass=\"csv-reader-input\"\n              onFileLoaded={handleCSV}\n              parserOptions={parseOptions}\n              inputId=\"csvId\"\n              inputStyle={{ color: \"black\" }}\n            />\n          </CsvBox>\n          {mutationLoading && <p>Processing and uploading data...</p>}\n          {mutationError && <p>Error, Please try again</p>}\n          {customerdata && <p>Customers succesfully added </p>}\n        </>\n      )}\n      {addone && <></>}\n\n      <CustomerHeader>\n        <CustomerItem\n          key={\"header\"}\n          id={\"ID\"}\n          firstName={\"firstName\"}\n          lastName={\"lastName\"}\n          email={\"email\"}\n          customerSince={\"customerSince\"}\n        ></CustomerItem>\n      </CustomerHeader>\n      <CustomerTable>\n        {data.customers.map(\n          ({ id, firstName, lastName, email, customerSince }) => (\n            <CustomerItem\n              key={id}\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              customerSince={customerSince}\n            ></CustomerItem>\n          )\n        )}\n      </CustomerTable>\n    </>\n  );\n}\n\nexport default CustomerAddPage;\n"]},"metadata":{},"sourceType":"module"}