{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER, DELETE_CUSTOMERS } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CSVReader from \"react-csv-reader\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n_c3 = CsvBox;\nconst FormikBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 40px auto 0px auto;\n`;\n_c4 = FormikBox;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n_c5 = CustomerAddButtons;\n\nfunction CustomerAddPage() {\n  _s();\n\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CUSTOMERS);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomer, setdeletecustomer] = useState(false);\n  const [addCustomer, {\n    loading: mutationLoading,\n    error: mutationError,\n    data: customerdata\n  }] = useMutation(ADD_CUSTOMER);\n  const [deleteCustomers, {\n    loading: deleteLoading,\n    error: deleteError,\n    data: deletemessage\n  }] = useMutation(DELETE_CUSTOMERS);\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.replace(/\\W/g, \"_\")\n  };\n\n  const handleCSV = async (data, fileInfo) => {\n    await addCustomer({\n      variables: {\n        newcustomers: data\n      }\n    });\n    toast.success(\"succesfully added customers to list\", {\n      position: \"top-right\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    refetch();\n  };\n\n  const handleCustomerClick = userid => {\n    history.push(\"/user\", {\n      params: userid\n    });\n  };\n\n  const deleteAllCustomers = async () => {\n    const ids = data.customers.map(({\n      id\n    }) => {\n      return id;\n    });\n    await deleteCustomers({\n      variables: {\n        ids: ids\n      }\n    });\n    refetch();\n  };\n\n  const CustomerSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n    lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\")\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), !addmultiple && !addone && !deletecustomer && /*#__PURE__*/_jsxDEV(CustomerAddButtons, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddone(true),\n        children: \"Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddmultiple(true),\n        children: \"Add Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteAllCustomers,\n        children: \"Delete all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), addmultiple && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CsvBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload .CSV file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          cssClass: \"csv-reader-input\",\n          onFileLoaded: handleCSV,\n          parserOptions: parseOptions,\n          inputId: \"csvId\",\n          inputStyle: {\n            color: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing and uploading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 31\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error, Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), addone && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FormikBox, {\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\"\n          },\n          validationSchema: CustomerSchema,\n          onSubmit: values => {\n            console.log(values);\n            addCustomer({\n              variables: {\n                newcustomers: [values]\n              }\n            });\n            toast.success(\"succesfully added customer to list\", {\n              position: \"top-right\",\n              autoClose: 4000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n            refetch();\n          },\n          children: ({\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Processing and uploading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Error, Please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n      children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: \"ID\",\n        firstName: \"firstName\",\n        lastName: \"lastName\",\n        email: \"email\",\n        customerSince: \"customerSince\"\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n      children: data.customers.map(({\n        id,\n        firstName,\n        lastName,\n        email,\n        customerSince\n      }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n        handleCustomerClick: handleCustomerClick,\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        customerSince: customerSince\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerAddPage, \"30vPRcCIsZilzymOQez9UwuzftE=\", false, function () {\n  return [useHistory, useQuery, useMutation, useMutation];\n});\n\n_c6 = CustomerAddPage;\nexport default CustomerAddPage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CsvBox\");\n$RefreshReg$(_c4, \"FormikBox\");\n$RefreshReg$(_c5, \"CustomerAddButtons\");\n$RefreshReg$(_c6, \"CustomerAddPage\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js"],"names":["useQuery","useMutation","GET_CUSTOMERS","ADD_CUSTOMER","DELETE_CUSTOMERS","CustomerItem","styled","React","useState","useHistory","CSVReader","Formik","Form","Field","Yup","ToastContainer","toast","CustomerTable","div","CustomerHeader","CsvBox","FormikBox","CustomerAddButtons","CustomerAddPage","history","loading","error","data","refetch","addone","setaddone","addmultiple","setaddmultiple","deletecustomer","setdeletecustomer","addCustomer","mutationLoading","mutationError","customerdata","deleteCustomers","deleteLoading","deleteError","deletemessage","parseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","handleCSV","fileInfo","variables","newcustomers","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleCustomerClick","userid","push","params","deleteAllCustomers","ids","customers","map","id","CustomerSchema","object","shape","firstName","string","min","max","required","lastName","email","color","values","console","log","errors","touched","customerSince"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER, DELETE_CUSTOMERS } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CSVReader from \"react-csv-reader\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\nconst FormikBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 40px auto 0px auto;\n`;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\nfunction CustomerAddPage() {\n  const history = useHistory();\n  const { loading, error, data, refetch } = useQuery(GET_CUSTOMERS);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [deletecustomer, setdeletecustomer] = useState(false);\n  const [\n    addCustomer,\n    { loading: mutationLoading, error: mutationError, data: customerdata },\n  ] = useMutation(ADD_CUSTOMER);\n  const [\n    deleteCustomers,\n    { loading: deleteLoading, error: deleteError, data: deletemessage },\n  ] = useMutation(DELETE_CUSTOMERS);\n\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.replace(/\\W/g, \"_\"),\n  };\n\n  const handleCSV = async (data, fileInfo) => {\n    await addCustomer({ variables: { newcustomers: data } });\n    toast.success(\"succesfully added customers to list\", {\n      position: \"top-right\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    refetch();\n  };\n\n  const handleCustomerClick = (userid) => {\n    history.push(\"/user\", { params: userid });\n  };\n\n  const deleteAllCustomers = async () => {\n    const ids = data.customers.map(({ id }) => {\n      return id;\n    });\n\n    await deleteCustomers({\n      variables: {\n        ids: ids,\n      },\n    });\n    refetch();\n  };\n  const CustomerSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <ToastContainer />\n      {!addmultiple && !addone && !deletecustomer && (\n        <CustomerAddButtons>\n          <button onClick={() => setaddone(true)}>Add Customer</button>\n          <button onClick={() => setaddmultiple(true)}>Add Customers</button>\n          <button onClick={deleteAllCustomers}>Delete all</button>\n        </CustomerAddButtons>\n      )}\n\n      {addmultiple && (\n        <>\n          <CsvBox>\n            <p>Upload .CSV file:</p>\n            <CSVReader\n              cssClass=\"csv-reader-input\"\n              onFileLoaded={handleCSV}\n              parserOptions={parseOptions}\n              inputId=\"csvId\"\n              inputStyle={{ color: \"black\" }}\n            />\n          </CsvBox>\n          {mutationLoading && <p>Processing and uploading data...</p>}\n          {mutationError && <p>Error, Please try again</p>}\n        </>\n      )}\n      {addone && (\n        <>\n          <FormikBox>\n            <Formik\n              initialValues={{\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n              }}\n              validationSchema={CustomerSchema}\n              onSubmit={(values) => {\n                console.log(values);\n                addCustomer({ variables: { newcustomers: [values] } });\n                toast.success(\"succesfully added customer to list\", {\n                  position: \"top-right\",\n                  autoClose: 4000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n                refetch();\n              }}\n            >\n              {({ errors, touched }) => (\n                <Form>\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <Field name=\"firstName\" />\n\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <Field name=\"lastName\" />\n\n                  <label htmlFor=\"email\">Email</label>\n                  <Field name=\"email\" type=\"email\" />\n\n                  <button type=\"submit\">Submit</button>\n                </Form>\n              )}\n            </Formik>\n            {mutationLoading && <p>Processing and uploading data...</p>}\n            {mutationError && <p>Error, Please try again</p>}\n          </FormikBox>\n        </>\n      )}\n\n      <CustomerHeader>\n        <CustomerItem\n          key={\"header\"}\n          id={\"ID\"}\n          firstName={\"firstName\"}\n          lastName={\"lastName\"}\n          email={\"email\"}\n          customerSince={\"customerSince\"}\n        ></CustomerItem>\n      </CustomerHeader>\n      <CustomerTable>\n        {data.customers.map(\n          ({ id, firstName, lastName, email, customerSince }) => (\n            <CustomerItem\n              handleCustomerClick={handleCustomerClick}\n              key={id}\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              customerSince={customerSince}\n            ></CustomerItem>\n          )\n        )}\n      </CustomerTable>\n    </>\n  );\n}\n\nexport default CustomerAddPage;\n"]},"metadata":{},"sourceType":"module"}