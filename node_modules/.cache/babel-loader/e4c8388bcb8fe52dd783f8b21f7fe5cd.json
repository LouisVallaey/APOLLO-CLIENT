{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/pages/CustomerPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { GET_CUSTOMER } from \"../graphql/queries\";\nimport { UPDATE_CUSTOMER } from \"../graphql/mutations\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Formik, Field, Form } from \"formik\";\n\nfunction CustomerPage() {\n  _s();\n\n  const location = useLocation();\n  const id = location.state.params;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CUSTOMER, {\n    variables: {\n      id\n    }\n  });\n  const [updateCustomer, {\n    loading: mutationLoading,\n    error: mutationError,\n    data: customerdata\n  }] = useMutation(UPDATE_CUSTOMER);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.customer.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.customer.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.customer.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.customer.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.customer.customerSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: data.customer.firstName,\n        lastName: data.customer.lastName,\n        email: data.customer.email\n      },\n      onSubmit: async values => {\n        updateCustomer({\n          variables: {\n            id: data.customer.id,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            email: values.email\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"firstName\",\n          name: \"firstName\",\n          placeholder: \"Jane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"lastName\",\n          name: \"lastName\",\n          placeholder: \"Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"jane@acme.com\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing and uploading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error, Please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerPage, \"3v096A4ThecRcKlxvTWVyLkl7gk=\", false, function () {\n  return [useLocation, useQuery, useMutation];\n});\n\n_c = CustomerPage;\nexport default CustomerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/pages/CustomerPage.js"],"names":["React","useState","GET_CUSTOMER","UPDATE_CUSTOMER","useLocation","useMutation","useQuery","Formik","Field","Form","CustomerPage","location","id","state","params","loading","error","data","refetch","variables","updateCustomer","mutationLoading","mutationError","customerdata","customer","firstName","lastName","email","customerSince","values"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { GET_CUSTOMER } from \"../graphql/queries\";\nimport { UPDATE_CUSTOMER } from \"../graphql/mutations\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Formik, Field, Form } from \"formik\";\nfunction CustomerPage() {\n  const location = useLocation();\n  const id = location.state.params;\n  const { loading, error, data, refetch } = useQuery(GET_CUSTOMER, {\n    variables: { id },\n  });\n  const [\n    updateCustomer,\n    { loading: mutationLoading, error: mutationError, data: customerdata },\n  ] = useMutation(UPDATE_CUSTOMER);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <p>{data.customer.id}</p>\n      <p>{data.customer.firstName}</p>\n      <p>{data.customer.lastName}</p>\n      <p>{data.customer.email}</p>\n      <p>{data.customer.customerSince}</p>\n\n      <Formik\n        initialValues={{\n          firstName: data.customer.firstName,\n          lastName: data.customer.lastName,\n          email: data.customer.email,\n        }}\n        onSubmit={async (values) => {\n          updateCustomer({\n            variables: {\n              id: data.customer.id,\n              firstName: values.firstName,\n              lastName: values.lastName,\n              email: values.email,\n            },\n          });\n        }}\n      >\n        <Form>\n          <label htmlFor=\"firstName\">First Name</label>\n          <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\n\n          <label htmlFor=\"lastName\">Last Name</label>\n          <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n\n          <label htmlFor=\"email\">Email</label>\n          <Field\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"jane@acme.com\"\n            type=\"email\"\n          />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n      {mutationLoading && <p>Processing and uploading data...</p>}\n      {mutationError && <p>Error, Please try again</p>}\n    </>\n  );\n}\n\nexport default CustomerPage;\n"]},"metadata":{},"sourceType":"module"}