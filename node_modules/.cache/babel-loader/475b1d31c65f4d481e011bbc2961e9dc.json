{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/pages/CustomerPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { GET_CUSTOMER } from \"../graphql/queries\";\nimport { UPDATE_CUSTOMER } from \"../graphql/mutations\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Formik, Field, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport CustomerItem from \"../components/customeritem\";\nconst FormikBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c = FormikBox;\n\nfunction CustomerPage() {\n  _s();\n\n  const location = useLocation();\n  const id = location.state.params;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CUSTOMER, {\n    variables: {\n      id\n    }\n  });\n  const [updateCustomer, {\n    loading: mutationLoading,\n    error: mutationError,\n    data: customerdata\n  }] = useMutation(UPDATE_CUSTOMER);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikBox, {\n      children: [/*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: data.customer.id,\n        firstName: data.customer.firstName,\n        lastName: data.customer.lastName,\n        email: data.customer.email,\n        customerSince: data.customer.customerSince\n      }, data.customer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: data.customer.firstName,\n          lastName: data.customer.lastName,\n          email: data.customer.email\n        },\n        onSubmit: async values => {\n          updateCustomer({\n            variables: {\n              id: data.customer.id,\n              firstName: values.firstName,\n              lastName: values.lastName,\n              email: values.email\n            }\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"firstName\",\n            name: \"firstName\",\n            placeholder: \"Jane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"lastName\",\n            name: \"lastName\",\n            placeholder: \"Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"jane@acme.com\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing and uploading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error, Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CustomerPage, \"3v096A4ThecRcKlxvTWVyLkl7gk=\", false, function () {\n  return [useLocation, useQuery, useMutation];\n});\n\n_c2 = CustomerPage;\nexport default CustomerPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormikBox\");\n$RefreshReg$(_c2, \"CustomerPage\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/pages/CustomerPage.js"],"names":["React","useState","GET_CUSTOMER","UPDATE_CUSTOMER","useLocation","useMutation","useQuery","Formik","Field","Form","styled","CustomerItem","FormikBox","div","CustomerPage","location","id","state","params","loading","error","data","refetch","variables","updateCustomer","mutationLoading","mutationError","customerdata","customer","firstName","lastName","email","customerSince","values"],"mappings":";;;;;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,S;;AAQN,SAASE,YAAT,GAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAA1B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAoChB,QAAQ,CAACJ,YAAD,EAAe;AAC/DqB,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AADoD,GAAf,CAAlD;AAGA,QAAM,CACJQ,cADI,EAEJ;AAAEL,IAAAA,OAAO,EAAEM,eAAX;AAA4BL,IAAAA,KAAK,EAAEM,aAAnC;AAAkDL,IAAAA,IAAI,EAAEM;AAAxD,GAFI,IAGFtB,WAAW,CAACF,eAAD,CAHf;AAKA,MAAIgB,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,YAAD;AAEE,QAAA,EAAE,EAAEC,IAAI,CAACO,QAAL,CAAcZ,EAFpB;AAGE,QAAA,SAAS,EAAEK,IAAI,CAACO,QAAL,CAAcC,SAH3B;AAIE,QAAA,QAAQ,EAAER,IAAI,CAACO,QAAL,CAAcE,QAJ1B;AAKE,QAAA,KAAK,EAAET,IAAI,CAACO,QAAL,CAAcG,KALvB;AAME,QAAA,aAAa,EAAEV,IAAI,CAACO,QAAL,CAAcI;AAN/B,SACOX,IAAI,CAACO,QAAL,CAAcZ,EADrB;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACba,UAAAA,SAAS,EAAER,IAAI,CAACO,QAAL,CAAcC,SADZ;AAEbC,UAAAA,QAAQ,EAAET,IAAI,CAACO,QAAL,CAAcE,QAFX;AAGbC,UAAAA,KAAK,EAAEV,IAAI,CAACO,QAAL,CAAcG;AAHR,SADjB;AAME,QAAA,QAAQ,EAAE,MAAOE,MAAP,IAAkB;AAC1BT,UAAAA,cAAc,CAAC;AACbD,YAAAA,SAAS,EAAE;AACTP,cAAAA,EAAE,EAAEK,IAAI,CAACO,QAAL,CAAcZ,EADT;AAETa,cAAAA,SAAS,EAAEI,MAAM,CAACJ,SAFT;AAGTC,cAAAA,QAAQ,EAAEG,MAAM,CAACH,QAHR;AAITC,cAAAA,KAAK,EAAEE,MAAM,CAACF;AAJL;AADE,WAAD,CAAd;AAQD,SAfH;AAAA,+BAiBE,QAAC,IAAD;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,WAAV;AAAsB,YAAA,IAAI,EAAC,WAA3B;AAAuC,YAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,UAAV;AAAqB,YAAA,IAAI,EAAC,UAA1B;AAAqC,YAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,kBALF,eAOE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,KAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,WAAW,EAAC,eAHd;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBARF,eAcE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,cAVF,EA4CGN,eAAe,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CtB,EA6CGC,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmDD;;GAhEQZ,Y;UACUV,W,EAEyBE,Q,EAMtCD,W;;;MATGS,Y;AAkET,eAAeA,YAAf","sourcesContent":["import \"../App.css\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { GET_CUSTOMER } from \"../graphql/queries\";\nimport { UPDATE_CUSTOMER } from \"../graphql/mutations\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Formik, Field, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport CustomerItem from \"../components/customeritem\";\n\nconst FormikBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nfunction CustomerPage() {\n  const location = useLocation();\n  const id = location.state.params;\n  const { loading, error, data, refetch } = useQuery(GET_CUSTOMER, {\n    variables: { id },\n  });\n  const [\n    updateCustomer,\n    { loading: mutationLoading, error: mutationError, data: customerdata },\n  ] = useMutation(UPDATE_CUSTOMER);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <FormikBox>\n        <CustomerItem\n          key={data.customer.id}\n          id={data.customer.id}\n          firstName={data.customer.firstName}\n          lastName={data.customer.lastName}\n          email={data.customer.email}\n          customerSince={data.customer.customerSince}\n        ></CustomerItem>\n\n        <Formik\n          initialValues={{\n            firstName: data.customer.firstName,\n            lastName: data.customer.lastName,\n            email: data.customer.email,\n          }}\n          onSubmit={async (values) => {\n            updateCustomer({\n              variables: {\n                id: data.customer.id,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                email: values.email,\n              },\n            });\n          }}\n        >\n          <Form>\n            <label htmlFor=\"firstName\">First Name</label>\n            <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\n\n            <label htmlFor=\"lastName\">Last Name</label>\n            <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n\n            <label htmlFor=\"email\">Email</label>\n            <Field\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"jane@acme.com\"\n              type=\"email\"\n            />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        </Formik>\n        {mutationLoading && <p>Processing and uploading data...</p>}\n        {mutationError && <p>Error, Please try again</p>}\n      </FormikBox>\n    </>\n  );\n}\n\nexport default CustomerPage;\n"]},"metadata":{},"sourceType":"module"}