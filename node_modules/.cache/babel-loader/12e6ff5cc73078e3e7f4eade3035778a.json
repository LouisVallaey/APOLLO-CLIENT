{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"./graphql/queries\";\nimport { ADD_CUSTOMER } from \"./graphql/mutations\";\nimport CustomerItem from \"./components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 80%;\n  margin: 0px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n_c3 = CsvBox;\n\nfunction App() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CUSTOMERS);\n  const [addCustomer] = useMutation(ADD_CUSTOMER);\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.replace(/\\W/g, \"_\")\n  };\n\n  const handleCSV = (data, fileInfo) => {\n    addCustomer({\n      variables: {\n        newcustomers: data\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CsvBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload .CSV file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n        cssClass: \"csv-reader-input\",\n        onFileLoaded: handleCSV,\n        parserOptions: parseOptions,\n        inputId: \"csvId\",\n        inputStyle: {\n          color: \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n      children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: \"ID\",\n        firstName: \"firstName\",\n        lastName: \"lastName\",\n        email: \"email\",\n        customerSince: \"customerSince\"\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n      children: data.customers.map(({\n        id,\n        firstName,\n        lastName,\n        email,\n        customerSince\n      }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        customerSince: customerSince\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"B3DHp/mFGMOpuV/FIrLi3IaUvi8=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CsvBox\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/App.js"],"names":["useQuery","useMutation","GET_CUSTOMERS","ADD_CUSTOMER","CustomerItem","styled","React","useEffect","CSVReader","CustomerTable","div","CustomerHeader","CsvBox","App","loading","error","data","addCustomer","parseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","handleCSV","fileInfo","variables","newcustomers","color","customers","map","id","firstName","lastName","email","customerSince"],"mappings":";;;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;KAAMD,a;AAON,MAAME,cAAc,GAAGN,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA,CALA;MAAMC,c;AAON,MAAMC,MAAM,GAAGP,MAAM,CAACK,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAME,M;;AAYN,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACE,aAAD,CAAzC;AACA,QAAM,CAACe,WAAD,IAAgBhB,WAAW,CAACE,YAAD,CAAjC;AAEA,QAAMe,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,IADW;AAEnBC,IAAAA,aAAa,EAAE,IAFI;AAGnBC,IAAAA,cAAc,EAAE,IAHG;AAInBC,IAAAA,eAAe,EAAGH,MAAD,IAAYA,MAAM,CAACI,OAAP,CAAe,KAAf,EAAsB,GAAtB;AAJV,GAArB;;AAOA,QAAMC,SAAS,GAAG,CAACR,IAAD,EAAOS,QAAP,KAAoB;AACpCR,IAAAA,WAAW,CAAC;AAAES,MAAAA,SAAS,EAAE;AAAEC,QAAAA,YAAY,EAAEX;AAAhB;AAAb,KAAD,CAAX;AACD,GAFD;;AAIA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAC,kBADX;AAEE,QAAA,YAAY,EAAES,SAFhB;AAGE,QAAA,aAAa,EAAEN,YAHjB;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,UAAU,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT;AALd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,cAAD;AAAA,6BACE,QAAC,YAAD;AAEE,QAAA,EAAE,EAAE,IAFN;AAGE,QAAA,SAAS,EAAE,WAHb;AAIE,QAAA,QAAQ,EAAE,UAJZ;AAKE,QAAA,KAAK,EAAE,OALT;AAME,QAAA,aAAa,EAAE;AANjB,SACO,QADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,aAAD;AAAA,gBACGZ,IAAI,CAACa,SAAL,CAAeC,GAAf,CACC,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,SAAN;AAAiBC,QAAAA,QAAjB;AAA2BC,QAAAA,KAA3B;AAAkCC,QAAAA;AAAlC,OAAD,kBACE,QAAC,YAAD;AAEE,QAAA,EAAE,EAAEJ,EAFN;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,aAAa,EAAEC;AANjB,SACOJ,EADP;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAsCD;;GAvDQlB,G;UAC0Bb,Q,EACXC,W;;;MAFfY,G;AAyDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"./graphql/queries\";\nimport { ADD_CUSTOMER } from \"./graphql/mutations\";\nimport CustomerItem from \"./components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport CSVReader from \"react-csv-reader\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 80%;\n  margin: 0px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_CUSTOMERS);\n  const [addCustomer] = useMutation(ADD_CUSTOMER);\n\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.replace(/\\W/g, \"_\"),\n  };\n\n  const handleCSV = (data, fileInfo) => {\n    addCustomer({ variables: { newcustomers: data } });\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <CsvBox>\n        <p>Upload .CSV file:</p>\n        <CSVReader\n          cssClass=\"csv-reader-input\"\n          onFileLoaded={handleCSV}\n          parserOptions={parseOptions}\n          inputId=\"csvId\"\n          inputStyle={{ color: \"black\" }}\n        />\n      </CsvBox>\n      <CustomerHeader>\n        <CustomerItem\n          key={\"header\"}\n          id={\"ID\"}\n          firstName={\"firstName\"}\n          lastName={\"lastName\"}\n          email={\"email\"}\n          customerSince={\"customerSince\"}\n        ></CustomerItem>\n      </CustomerHeader>\n      <CustomerTable>\n        {data.customers.map(\n          ({ id, firstName, lastName, email, customerSince }) => (\n            <CustomerItem\n              key={id}\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              customerSince={customerSince}\n            ></CustomerItem>\n          )\n        )}\n      </CustomerTable>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}