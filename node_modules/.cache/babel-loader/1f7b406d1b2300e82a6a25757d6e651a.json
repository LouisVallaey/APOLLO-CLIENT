{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n_c = CustomerTable;\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n_c2 = CustomerHeader;\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n_c3 = CsvBox;\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\n_c4 = CustomerAddButtons;\n\nfunction CustomerAddPage() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(GET_CUSTOMERS);\n  const [addone, setaddone] = useState(false);\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [addCustomer, {\n    loading: mutationLoading,\n    error: mutationError,\n    data: customerdata\n  }] = useMutation(ADD_CUSTOMER);\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.replace(/\\W/g, \"_\")\n  };\n\n  const handleCSV = async (data, fileInfo) => {\n    await addCustomer({\n      variables: {\n        newcustomers: data\n      }\n    });\n    toast.success(\"succesfully added customers to list\", {\n      position: \"top-right\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    refetch();\n  };\n\n  const CustomerSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n    lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\")\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), !addmultiple && !addone && /*#__PURE__*/_jsxDEV(CustomerAddButtons, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddone(true),\n        children: \"Add one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setaddmultiple(true),\n        children: \"Add multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), addmultiple && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CsvBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload .CSV file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          cssClass: \"csv-reader-input\",\n          onFileLoaded: handleCSV,\n          parserOptions: parseOptions,\n          inputId: \"csvId\",\n          inputStyle: {\n            color: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing and uploading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 31\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error, Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), addone && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\"\n        },\n        validationSchema: CustomerSchema,\n        onSubmit: async values => {\n          console.log(values);\n          await addCustomer({\n            variables: {\n              newcustomers: [values]\n            }\n          });\n          toast.success(\"succesfully added customer to list\", {\n            position: \"top-right\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          refetch();\n        },\n        children: ({\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing and uploading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 31\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error, Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(CustomerHeader, {\n      children: /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: \"ID\",\n        firstName: \"firstName\",\n        lastName: \"lastName\",\n        email: \"email\",\n        customerSince: \"customerSince\"\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerTable, {\n      children: data.customers.map(({\n        id,\n        firstName,\n        lastName,\n        email,\n        customerSince\n      }) => /*#__PURE__*/_jsxDEV(CustomerItem, {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        customerSince: customerSince\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerAddPage, \"FdKldn+0Ofh3irn1FiU1ORjQfzY=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c5 = CustomerAddPage;\nexport default CustomerAddPage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CustomerTable\");\n$RefreshReg$(_c2, \"CustomerHeader\");\n$RefreshReg$(_c3, \"CsvBox\");\n$RefreshReg$(_c4, \"CustomerAddButtons\");\n$RefreshReg$(_c5, \"CustomerAddPage\");","map":{"version":3,"sources":["/Users/louisvallaey/apollo-client/src/pages/CustomerAddPage.js"],"names":["useQuery","useMutation","GET_CUSTOMERS","ADD_CUSTOMER","CustomerItem","styled","React","useState","CSVReader","Formik","Form","Field","Yup","ToastContainer","toast","CustomerTable","div","CustomerHeader","CsvBox","CustomerAddButtons","CustomerAddPage","loading","error","data","refetch","addone","setaddone","addmultiple","setaddmultiple","addCustomer","mutationLoading","mutationError","customerdata","parseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","handleCSV","fileInfo","variables","newcustomers","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","CustomerSchema","object","shape","firstName","string","min","max","required","lastName","email","color","values","console","log","errors","touched","customers","map","id","customerSince"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_CUSTOMERS } from \"../graphql/queries\";\nimport { ADD_CUSTOMER } from \"../graphql/mutations\";\nimport CustomerItem from \"../components/customeritem\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst CustomerTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 0px auto 0px auto;\n`;\n\nconst CustomerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 40px auto 0px auto;\n`;\n\nconst CsvBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  margin: 40px auto 0px auto;\n\n  p {\n    margin-right: 10px;\n  }\n`;\n\nconst CustomerAddButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 40px auto 0px auto;\n  button {\n    cursor: pointer;\n    background-color: #1c7293;\n    color: white;\n    width: 100%;\n    height: 40px;\n    margin: 20px;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    &:hover {\n      background-color: #1f8db8;\n    }\n  }\n`;\nfunction CustomerAddPage() {\n  const { loading, error, data, refetch } = useQuery(GET_CUSTOMERS);\n\n  const [addone, setaddone] = useState(false);\n\n  const [addmultiple, setaddmultiple] = useState(false);\n  const [\n    addCustomer,\n    { loading: mutationLoading, error: mutationError, data: customerdata },\n  ] = useMutation(ADD_CUSTOMER);\n\n  const parseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.replace(/\\W/g, \"_\"),\n  };\n\n  const handleCSV = async (data, fileInfo) => {\n    await addCustomer({ variables: { newcustomers: data } });\n    toast.success(\"succesfully added customers to list\", {\n      position: \"top-right\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    refetch();\n  };\n\n  const CustomerSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <ToastContainer />\n      {!addmultiple && !addone && (\n        <CustomerAddButtons>\n          <button onClick={() => setaddone(true)}>Add one</button>\n          <button onClick={() => setaddmultiple(true)}>Add multiple</button>\n        </CustomerAddButtons>\n      )}\n\n      {addmultiple && (\n        <>\n          <CsvBox>\n            <p>Upload .CSV file:</p>\n            <CSVReader\n              cssClass=\"csv-reader-input\"\n              onFileLoaded={handleCSV}\n              parserOptions={parseOptions}\n              inputId=\"csvId\"\n              inputStyle={{ color: \"black\" }}\n            />\n          </CsvBox>\n          {mutationLoading && <p>Processing and uploading data...</p>}\n          {mutationError && <p>Error, Please try again</p>}\n        </>\n      )}\n      {addone && (\n        <>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n            }}\n            validationSchema={CustomerSchema}\n            onSubmit={async (values) => {\n              console.log(values);\n              await addCustomer({ variables: { newcustomers: [values] } });\n              toast.success(\"succesfully added customer to list\", {\n                position: \"top-right\",\n                autoClose: 4000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n              refetch();\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form>\n                <label htmlFor=\"firstName\">First Name</label>\n                <Field name=\"firstName\" />\n\n                <label htmlFor=\"lastName\">Last Name</label>\n                <Field name=\"lastName\" />\n\n                <label htmlFor=\"email\">Email</label>\n                <Field name=\"email\" type=\"email\" />\n\n                <button type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n          {mutationLoading && <p>Processing and uploading data...</p>}\n          {mutationError && <p>Error, Please try again</p>}\n        </>\n      )}\n\n      <CustomerHeader>\n        <CustomerItem\n          key={\"header\"}\n          id={\"ID\"}\n          firstName={\"firstName\"}\n          lastName={\"lastName\"}\n          email={\"email\"}\n          customerSince={\"customerSince\"}\n        ></CustomerItem>\n      </CustomerHeader>\n      <CustomerTable>\n        {data.customers.map(\n          ({ id, firstName, lastName, email, customerSince }) => (\n            <CustomerItem\n              key={id}\n              id={id}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              customerSince={customerSince}\n            ></CustomerItem>\n          )\n        )}\n      </CustomerTable>\n    </>\n  );\n}\n\nexport default CustomerAddPage;\n"]},"metadata":{},"sourceType":"module"}